{"name":"Node-fakir","tagline":"magic rest client","body":"#node-fakir\r\n\r\n*magic rest client*\r\n\r\n[![NPM](https://nodei.co/npm/fakir.png?downloads=true&stars=true)](https://nodei.co/npm/fakir/)\r\n\r\n## Description\r\n\r\nYou only deal with rest + json + callback-based apps? look no further:\r\n\r\n## How it works\r\n\r\n\r\n### Coffee\r\n```coffeescript\r\nFakir = require 'fakir'\r\n\r\napi = new Fakir\r\n  hello: (msg)    -> \"POST $msg TO http://foo.bar\"\r\n  price: (ticker) -> \"GET http://foo.bar/stock/$ticker\"\r\n\r\n# and call them!\r\napi.hello \"world\"\r\n\r\n# all functions takes a \"callback(err, data)\"\r\napi.price \"PEAR\", (err, price) -> console.log \"PEAR: #{price}\"\r\n```\r\n\r\n### JS\r\n\r\nOf course Coffee and JS interfaces are strictly the same, and share the same features:\r\n\r\n```javascript\r\nvar Fakir = require('fakir', true); \r\nvar api = new Fakir({\r\n    'hello': function (msg) { \r\n        return \"POST $msg TO http://foo.bar\";\r\n    },\r\n    'price': function (ticker) { \r\n        return \"GET http://foo.bar/stock/$ticker\";\r\n    }\r\n}, true) // add 'true' at the end to mock/debug the routes\r\n\r\n// chaining is supported, but not yet futures: functions are called immediately \r\napi.hello(\"world\").price(\"PEAR\", function(err, price) { \r\n    return console.log(\"PEAR: #{price}\");\r\n})\r\n\r\n```\r\n\r\n### Changelog\r\n\r\n#### 0.0.1: \r\n * moved routes into the Fakir constructor\r\n * removed add() function\r\n * fixed a closure bug with the for loop\r\n * fixed a critical bug with optional callback\r\n * added an optional mock parameter to test routes\r\n * various cleaning\r\n \r\n#### 0.0.0: Initial version\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}